language: cpp
git:
  depth: 1
  submodules: false

fast_finish: false

matrix:
  include:

    # linux version have unique dependencies, so we set them up individually
    # linux version have unique dependencies, so we set them up individually
    - os: linux
      compiler: gcc
      dist: bionic
      env:
        - DESCRIPTION="Ubuntu Bionic build/test via CMake & gcc"
        - MATRIX_EVAL="CC=gcc && CXX=g++"

    - os: linux
      compiler: clang
      dist: bionic
      env:
        - DESCRIPTION="Ubuntu Bionic build/test via CMake & clang"
        - MATRIX_EVAL="CC=clang && CXX=clang++"

    - os: linux
      compiler: gcc
      dist: focal
      env:
        - DESCRIPTION="Ubuntu Bionic build/test via CMake & gcc"
        - MATRIX_EVAL="CC=gcc && CXX=g++"

    - os: linux
      compiler: clang
      dist: focal
      env:
        - DESCRIPTION="Ubuntu Bionic build/test via CMake & clang"
        - MATRIX_EVAL="CC=clang && CXX=clang++"


    # OS X Xcode
    - os: osx
      osx_image: xcode11.3
      env:
        - TOOL="xcode-osx"
        - DESCRIPTION="OS X build/test via Xcode"

    # iOS Xcode
    - os: osx
      osx_image: xcode9.2
      env:
        - TOOL="xcode-ios"
        - DESCRIPTION="OS X build/test via Xcode"

    # iOS-Sim Xcode
    - os: osx
      osx_image: xcode9.2
      env:
        - TOOL="xcode-ios-sim"
        - DESCRIPTION="OS X build/test via Xcode"

    #OS X CMake
    - os: osx
      osx_image: xcode11.3
      env:
        - TOOL="cmake"
        - DESCRIPTION="OS X build/test via CMake"
    # TODO: find fast way to install cmake 3.10 on these systems
    #- os: osx
    #  osx_image: xcode8.3
    #  env:
    #    - TOOL="cmake"
    #    - DESCRIPTION="OS X build/test via CMake"
    #- os: osx
    #  osx_image: xcode7.3
    #  env:
    #    - TOOL="cmake"
    #    - DESCRIPTION="OS X build/test via CMake"

before_install:
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then
      eval "${MATRIX_EVAL}";
    fi
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then
      git submodule update --init --recursive;
    fi

install:
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then
      tools/linux/scripts/trusty-install-deps.sh;
    elif [[ "$TRAVIS_OS_NAME" == "osx" ]] && [[ "$TOOL" == "cmake" ]]; then
      tools/osx/scripts/cmake-brew-install.sh;
    fi

script:
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then
      tools/ci/cmake_test.sh;
    elif  [[ "$TRAVIS_OS_NAME" == "osx" ]] && [[ "$TOOL" == "cmake" ]]; then
      tools/ci/cmake_test.sh;
    elif [[ "$TRAVIS_OS_NAME" == "osx" ]] && [[ "$TOOL" == "xcode-osx" ]]; then
      tools/ci/xcode_osx_test.sh;
    elif [[ "$TRAVIS_OS_NAME" == "osx" ]] && [[ "$TOOL" == "xcode-ios" ]]; then
      proj/xcode/ios-build-xcpretty.sh;
    elif [[ "$TRAVIS_OS_NAME" == "osx" ]] && [[ "$TOOL" == "xcode-ios-sim" ]]; then
      proj/xcode/iossim-build-xcpretty.sh;
    fi

